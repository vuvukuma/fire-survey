[{"/Users/hyungjun.kim/Projects/fire-survey/src/index.tsx":"1","/Users/hyungjun.kim/Projects/fire-survey/src/reportWebVitals.js":"2","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/ModalProvider.tsx":"3","/Users/hyungjun.kim/Projects/fire-survey/src/components/app/App.tsx":"4","/Users/hyungjun.kim/Projects/fire-survey/src/i18n/index.ts":"5","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/ModalContext.ts":"6","/Users/hyungjun.kim/Projects/fire-survey/src/components/footer/Footer.tsx":"7","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/questionPage/QuestionPage.tsx":"8","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/introPage/IntroPage.tsx":"9","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/resultPage/ResultPage.tsx":"10","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/Page.tsx":"11","/Users/hyungjun.kim/Projects/fire-survey/src/components/button/Button.tsx":"12","/Users/hyungjun.kim/Projects/fire-survey/src/components/inputs/CurrencyInput.tsx":"13","/Users/hyungjun.kim/Projects/fire-survey/src/components/header/Header.tsx":"14","/Users/hyungjun.kim/Projects/fire-survey/src/hooks/UseModal.ts":"15","/Users/hyungjun.kim/Projects/fire-survey/src/components/inputs/Slider.tsx":"16","/Users/hyungjun.kim/Projects/fire-survey/src/util/Share.ts":"17","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/sharingResultModal/SharingResultModal.tsx":"18","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/sharingTestModal/SharingTestModal.tsx":"19","/Users/hyungjun.kim/Projects/fire-survey/src/components/progressBar/ProgressBar.tsx":"20","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/baseModal/BaseModal.tsx":"21","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/Modal.tsx":"22","/Users/hyungjun.kim/Projects/fire-survey/src/hooks/UseModalContext.ts":"23","/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/ModalContainer.tsx":"24","/Users/hyungjun.kim/Projects/fire-survey/src/hooks/UseFireState.ts":"25","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/questionPage/QuestionPages.tsx":"26","/Users/hyungjun.kim/Projects/fire-survey/src/components/app/FireDataContext.ts":"27"},{"size":1051,"mtime":1618768461602,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1610225489902,"results":"30","hashOfConfig":"29"},{"size":894,"mtime":1615312343525,"results":"31","hashOfConfig":"29"},{"size":1914,"mtime":1618769004504,"results":"32","hashOfConfig":"29"},{"size":242,"mtime":1614033848880,"results":"33","hashOfConfig":"29"},{"size":187,"mtime":1615225377067,"results":"34","hashOfConfig":"29"},{"size":217,"mtime":1611504412810,"results":"35","hashOfConfig":"29"},{"size":2300,"mtime":1614439818071,"results":"36","hashOfConfig":"29"},{"size":1334,"mtime":1614507951192,"results":"37","hashOfConfig":"29"},{"size":4844,"mtime":1618756257798,"results":"38","hashOfConfig":"29"},{"size":345,"mtime":1614439748064,"results":"39","hashOfConfig":"29"},{"size":734,"mtime":1615319821767,"results":"40","hashOfConfig":"29"},{"size":642,"mtime":1610808725087,"results":"41","hashOfConfig":"29"},{"size":863,"mtime":1614431353230,"results":"42","hashOfConfig":"29"},{"size":353,"mtime":1615223496558,"results":"43","hashOfConfig":"29"},{"size":946,"mtime":1617134461684,"results":"44","hashOfConfig":"29"},{"size":844,"mtime":1616853300385,"results":"45","hashOfConfig":"29"},{"size":1326,"mtime":1616853449542,"results":"46","hashOfConfig":"29"},{"size":1313,"mtime":1616853264886,"results":"47","hashOfConfig":"29"},{"size":991,"mtime":1612809770943,"results":"48","hashOfConfig":"29"},{"size":913,"mtime":1615312246892,"results":"49","hashOfConfig":"29"},{"size":714,"mtime":1615312373987,"results":"50","hashOfConfig":"29"},{"size":188,"mtime":1614509597684,"results":"51","hashOfConfig":"29"},{"size":609,"mtime":1616852682670,"results":"52","hashOfConfig":"29"},{"size":2802,"mtime":1618756152258,"results":"53","hashOfConfig":"29"},{"size":1925,"mtime":1618757916207,"results":"54","hashOfConfig":"29"},{"size":188,"mtime":1618768580553,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1sjrirc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/hyungjun.kim/Projects/fire-survey/src/index.tsx",[],["117","118"],"/Users/hyungjun.kim/Projects/fire-survey/src/reportWebVitals.js",[],["119","120"],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/ModalProvider.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/app/App.tsx",["121","122","123","124"],"import React, { useEffect, useState } from 'react'\nimport { Switch, Route, useLocation } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\n\nimport IntroPage from '../../layout/page/introPage/IntroPage'\nimport QuestionPages from '../../layout/page/questionPage/QuestionPages'\nimport ResultPage from '../../layout/page/resultPage/ResultPage'\nimport Footer from '../footer/Footer'\n\nimport { FireDataContext, IFireData } from './FireDataContext'\nimport { useFireState } from 'hooks/UseFireState'\n\nimport './App.css'\n\nconst App = () => {\n    const {\n        fireNumber,\n        fireDate,\n        getSavingRate,\n    } = useFireState();\n   \n    let location = useLocation()\n\n    const defaultValue: IFireData = {\n        income: 10000,\n        expense: 1000,\n        pfValue: 100000,\n    }\n\n    return (\n        <FireDataContext.Provider value={defaultValue}>\n            <div className=\"container flex flex-col items-center h-screen max-h-640 mx-auto\">\n                    <article className=\"h-full md:max-w-1/4\">\n                        <Switch location={location}>\n                            <Route\n                                path=\"/result\"\n                                children={\n                                    <ResultPage\n                                        fireDate={fireDate}\n                                        fireNumber={fireNumber}\n                                        savingRate={getSavingRate() * 100}\n                                    />\n                                }\n                            />\n                            {/* <QuestionPages /> */}\n                            <Route path=\"/\">\n                                <IntroPage />\n                            </Route>\n                        </Switch>\n                    </article>\n                    <Footer />\n                </div>\n        </FireDataContext.Provider>\n    )\n}\n\nexport default App\n","/Users/hyungjun.kim/Projects/fire-survey/src/i18n/index.ts",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/ModalContext.ts",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/footer/Footer.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/questionPage/QuestionPage.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/introPage/IntroPage.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/resultPage/ResultPage.tsx",["125"],"import React, { FunctionComponent, useEffect } from 'react'\nimport { useLocation } from 'react-router'\nimport { FormattedMessage } from 'react-intl'\n\nimport Page from 'layout/page/Page'\nimport Button from 'components/button/Button'\nimport Slider from 'components/inputs/Slider'\nimport SharingResultModal from 'layout/modal/sharingResultModal/SharingResultModal'\nimport SharingTestModal from 'layout/modal/sharingTestModal/SharingTestModal'\nimport { useModal } from 'hooks/UseModal'\nimport { share } from 'util/Share'\nimport { useFireState } from 'hooks/UseFireState'\n\ntype ResultPageType = {\n    fireNumber: number\n    fireDate: string\n    savingRate: number\n}\n\nfunction usePageViews(cb: () => void) {\n    let location = useLocation()\n\n    useEffect(cb, [location])\n}\n\nconst ResultPage: FunctionComponent<ResultPageType> = (props) => {\n    const {\n        isModalOpen: isShareResultModalOpen,\n        openModal: openShareResultModal,\n        closeModal: closeShareResultModal,\n    } = useModal()\n    \n    const {\n        isModalOpen: isShareTestModalOpen,\n        openModal: openShareTestModal,\n        closeModal: closeShareTestModal,\n    } = useModal()\n\n    const {\n        updateResult,\n        updateResultFromSavingsRate\n    } = useFireState()\n\n    usePageViews(updateResult)\n\n    function onClickShareResult() {\n        share(\n            {\n                text: 'test',\n            },\n            openShareResultModal\n        )\n    }\n\n    function onClickShareTest() {\n        share(\n            {\n                text: 'test',\n            },\n            openShareTestModal\n        )\n    }\n\n    function handleRangeChange(newValue: number): void {\n        updateResultFromSavingsRate(newValue)\n    }\n\n    return (\n        <>\n            <Page className=\"justify-center\">\n                <div className=\"mb-4 border-b\">\n                    <div className=\"mb-8\">\n                        <h2 className=\"text-lg\">\n                            <FormattedMessage\n                                defaultMessage=\"Your FIRE number 💰\"\n                                description=\"Result page heading FIRE number\"\n                            ></FormattedMessage>\n                        </h2>\n                        <div className=\"text-2xl\">\n                            $ {props.fireNumber.toLocaleString()}\n                        </div>\n                    </div>\n                    <div className=\"mb-8\">\n                        <h3 className=\"text-lg\">\n                            <FormattedMessage\n                                defaultMessage=\"You can retire in ⏱\"\n                                description=\"Result page heading FIRE time\"\n                            ></FormattedMessage>\n                        </h3>\n                        <div className=\"text-2xl\">{props.fireDate}</div>\n                    </div>\n                </div>\n                <div className=\"w-full\">\n                    <div>\n                        <FormattedMessage\n                            defaultMessage=\"Speed up your FIRE\"\n                            description=\"\"\n                        ></FormattedMessage>\n                        <br />\n                        <FormattedMessage\n                            defaultMessage=\"by boosting savings rate 💸\"\n                            description=\"\"\n                        ></FormattedMessage>\n                    </div>\n                    <div className=\"py-8\">\n                        <Slider initialValue={props.savingRate} handleRangeChange={handleRangeChange}></Slider>\n                    </div>\n                </div>\n                <div>\n                    <Button className=\"mb-4\" onClick={onClickShareResult}>\n                        <FormattedMessage\n                            defaultMessage=\"Share the result 🤑\"\n                            description=\"Share the result\"\n                        ></FormattedMessage>\n                    </Button>\n                    <Button\n                        textColor=\"white\"\n                        bgColor=\"purple-600\"\n                        onClick={onClickShareTest}\n                    >\n                        <FormattedMessage\n                            defaultMessage=\"Recommend it to friends 🙈\"\n                            description=\"Share this page\"\n                        ></FormattedMessage>\n                    </Button>\n                </div>\n            </Page>\n            <SharingResultModal\n                id=\"sharing-result\"\n                isOpen={isShareResultModalOpen}\n                closeModal={closeShareResultModal}\n            ></SharingResultModal>\n            <SharingTestModal\n                id=\"sharing-test\"\n                isOpen={isShareTestModalOpen}\n                closeModal={closeShareTestModal}\n            ></SharingTestModal>\n        </>\n    )\n}\n\nexport default ResultPage\n","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/Page.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/button/Button.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/inputs/CurrencyInput.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/header/Header.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/hooks/UseModal.ts",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/inputs/Slider.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/util/Share.ts",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/sharingResultModal/SharingResultModal.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/sharingTestModal/SharingTestModal.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/components/progressBar/ProgressBar.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/baseModal/BaseModal.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/Modal.tsx",["126"],"import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useModalContext } from '../../hooks/UseModalContext'\n\nimport ModalContainer from './ModalContainer'\n\nexport interface ModalProps {\n    id: string\n    isOpen: boolean\n    modalClassName?: string\n    closeModal?: () => void\n}\n\nexport const Modal: React.FC<ModalProps> = (props) => {\n    const { add, remove } = useModalContext()\n    const { id, isOpen } = props\n\n    useEffect(() => {\n        isOpen ? add(id) : remove(id)\n        return () => remove(id)\n    }, [id, isOpen])\n\n    return ReactDOM.createPortal(\n        <ModalContainer {...props}>{props.children}</ModalContainer>,\n        document.body\n    )\n}\n\nexport default Modal\n","/Users/hyungjun.kim/Projects/fire-survey/src/hooks/UseModalContext.ts",[],"/Users/hyungjun.kim/Projects/fire-survey/src/layout/modal/ModalContainer.tsx",[],"/Users/hyungjun.kim/Projects/fire-survey/src/hooks/UseFireState.ts",["127"],"import { useState, useEffect } from 'react'\n\nexport const useFireState = () => {\n    const [income, setIncome] = useState(10000)\n    const [expense, setExpense] = useState(1000)\n    const [pfValue, setPfValue] = useState(100000)\n    const [savingsRate, setSavingsRate] = useState(0)\n    const [fireNumber, setFireNumber] = useState(0)\n    const [fireDate, setFireDate] = useState(new Date().toLocaleString())\n    \n    function getFireNumber(): number {\n        return expense * 300\n    }\n\n    function getSavingRate(): number {\n        return (income - expense) / income\n    }\n\n    function getFireDate(newSavingRate?: number): string {\n        const fireNumber: number = getFireNumber()\n        const difference: number = fireNumber - pfValue\n        const savingRatio: number = newSavingRate || getSavingRate()\n        \n        setSavingsRate(savingRatio)\n\n        if (savingRatio === 0) {\n            return (new Date(8640000000000000)).toLocaleDateString()\n        }\n\n        if (difference <= 0) {\n            return (new Date()).toLocaleDateString()\n        }\n\n        const remainingMonths: number = Math.round(\n            difference / (income * savingRatio)\n        )\n        \n        return calculateFireDate(remainingMonths)\n    }\n\n    function calculateFireDate(remainingMonths: number): string {\n        const today: Date = new Date()\n\n        today.setMonth(today.getMonth() + remainingMonths)\n\n        return today.toLocaleDateString()\n    }\n\n    function updateResult(): void {\n        setFireNumber(getFireNumber())\n        setFireDate(getFireDate())\n    }\n\n    function updateResultFromSavingsRate(newSavingRate: number): void {\n        const updatedSaving: number = income * newSavingRate\n        const updatedExpense: number = income - updatedSaving\n\n        setExpense(updatedExpense)\n        setSavingsRate(newSavingRate)\n    }\n\n    function handleChangeIncome(e: React.FormEvent<HTMLInputElement>): void {\n        const next = parseInt(e.currentTarget.value, 10)\n        setIncome(next >= 0 ? next : 0)\n    }\n\n    function handleChangeExpense(e: React.FormEvent<HTMLInputElement>): void {\n        const next = parseInt(e.currentTarget.value, 10)\n        setExpense(next >= 0 ? next : 0)\n    }\n\n    function handleChangePfValue(e: React.FormEvent<HTMLInputElement>): void {\n        const next = parseInt(e.currentTarget.value, 10)\n        setPfValue(next >= 0 ? next : 0)\n    }\n\n    useEffect(() => {\n        setFireNumber(getFireNumber())\n        setFireDate(getFireDate())\n    })\n\n    return {\n        income,\n        expense,\n        pfValue,\n        savingsRate,\n        fireNumber,\n        fireDate,\n        getSavingRate,\n        updateResult,\n        updateResultFromSavingsRate,\n        handleChangeIncome,\n        handleChangeExpense,\n        handleChangePfValue,\n    }\n}","/Users/hyungjun.kim/Projects/fire-survey/src/layout/page/questionPage/QuestionPages.tsx",["128","129"],"import React, { FunctionComponent, useEffect, useState } from 'react'\nimport { Route } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\n\nimport QuestionPage, {\n    QuestionPageType,\n} from 'layout/page/questionPage/QuestionPage'\n\nimport { useFireState } from 'hooks/UseFireState'\n\nconst QuestionPages: FunctionComponent = () => {\n    const intl = useIntl()\n    const {\n        income,\n        expense,\n        pfValue,\n        handleChangeIncome,\n        handleChangeExpense,\n        handleChangePfValue,\n    } = useFireState();\n\n    const questions: Array<QuestionPageType> = [\n        {\n            step: 1,\n            totalSteps: 3,\n            question: intl.formatMessage({\n                description: 'Q1. monthly income question',\n                defaultMessage: 'Your monthly income (after tax)',\n            }),\n            inputValue: income,\n            handleChange: handleChangeIncome,\n        },\n        {\n            step: 2,\n            totalSteps: 3,\n            question: intl.formatMessage({\n                description: 'Q2. monthly expenses',\n                defaultMessage: 'Your monthly expenses',\n            }),\n            inputValue: expense,\n            handleChange: handleChangeExpense,\n        },\n        {\n            step: 3,\n            totalSteps: 3,\n            question: intl.formatMessage({\n                description: 'Q3. portfolio value',\n                defaultMessage: 'Your current portfolio value',\n            }),\n            inputValue: pfValue,\n            handleChange: handleChangePfValue,\n        },\n    ]\n\n    return (\n        <>\n            {\n                questions.forEach((pageProps: QuestionPageType) => {\n                    <Route path={`/${pageProps.step}`} key={pageProps.step}>\n                        <QuestionPage {...pageProps} />\n                    </Route>\n                })\n            }\n        </>\n    )\n}\n\nexport default QuestionPages\n","/Users/hyungjun.kim/Projects/fire-survey/src/components/app/FireDataContext.ts",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"138","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"139","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":17},{"ruleId":"134","severity":1,"message":"140","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":23,"column":5,"nodeType":"136","endLine":23,"endColumn":14,"suggestions":"143"},{"ruleId":"141","severity":1,"message":"144","line":21,"column":8,"nodeType":"145","endLine":21,"endColumn":20,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"147","line":77,"column":5,"nodeType":"136","endLine":77,"endColumn":14,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":36,"nodeType":"136","messageId":"137","endLine":1,"endColumn":45},{"ruleId":"134","severity":1,"message":"138","line":1,"column":47,"nodeType":"136","messageId":"137","endLine":1,"endColumn":55},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useIntl' is defined but never used.","'QuestionPages' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'add' and 'remove'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect contains a call to 'setFireNumber'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getFireNumber, getFireDate] as a second argument to the useEffect Hook.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [cb]",{"range":"160","text":"161"},"Update the dependencies array to be: [add, id, isOpen, remove]",{"range":"162","text":"163"},"Add dependencies array: [getFireNumber, getFireDate]",{"range":"164","text":"165"},[754,764],"[cb]",[543,555],"[add, id, isOpen, remove]",[2502,2502],", [getFireNumber, getFireDate]"]